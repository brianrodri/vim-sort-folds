*vim-sort-folds*  Sort vim folds based on their first line

==============================================================================
                                                             *sortfolds-usage*
Usage ~

Sorting |folds| is not easily possible in vanilla vim. You could join all
lines in a fold, sort and split them up again; however, it is time consuming
and tedious.

This little plugin solves that issue: It sorts a visually selected region
while keeping closed folds intact. Since folds can be created in a variety of
ways (|fold-methods|), it is therefore straight-forward to sort arbitrary
groups of text based on their first line.

One use-case is to sort functions alphabetically after the fact.

NOTE: This plugin was not tested and is not expected to work with `foldmethod`
set to `manual` yet.

==============================================================================
                                                  *sortfolds-custom-sort-line*
Sorting by other lines ~

Per default folds are sorted based on the contents of the first line in each
fold. If, for some reason, you need to sort folds by the contents of another
line, you can do by directly calling `sortfolds#SortFolds` with the given line
number. Lines in folds are zero-indexed. That means to sort based on the 42th
line you would map:
>
  vmap <silent> <Leader>sf :call sortfolds#SortFolds(41)<CR>
<
==============================================================================
                                                      *sortfolds-requirements*
Requirements ~

This plugin requires |+python3| support enabled.

vim: tw=78:ts=4:ft=help:norl:
